3.2.1 (Media Mark)
2e1b4fc6b400e5bc513e2309a9d4d454e8ce2abc
o:Sass::Tree::RootNode
:@template"Ü// ---------------------------------------------------------------------------
// Imports

@import "compass/utilities/general/clearfix";
@import "compass/css3/box-sizing";

// ---------------------------------------------------------------------------
// Border-Box Sizing

// Apply the border-box sizing model to all elements
// and adjust the grid math appropriately.
@mixin border-box-sizing {
  $border-box-sizing: true;
  * { @include box-sizing(border-box); }
}

// ---------------------------------------------------------------------------
// Container

// Set the width of a container
//
//  $columns  : The number of columns in the Grid Layout.
@mixin set-container-width(
  $columns  : $total-columns
){
  $width: container-outer-width($columns);

  @if $container-style == 'static' {
    width: $width;
  } @else {
    @if $container-style == 'fluid' {
      width: if(unit($width) == '%', $width, auto);
    } @else {
      max-width: $width;
      @if $legacy-support-for-ie6 { _width: $width; }
    }
  }
}

// Set the outer grid-containing element(s).
//
//  $columns  : The number of columns in the container.
@mixin apply-container(
  $columns  : $total-columns
){
  @include pie-clearfix;
  @include set-container-width($columns);
  margin: { left: auto; right: auto; }
  padding: { left: $grid-padding; right: $grid-padding; }
}

// Set one or more layouts on a grid-containing element at any number of media-query breakpoints.
//
// $media-layout-1        : [default:$total-columns] A list of values including -
//                        : One unitless number (representing columns in a layout)
//                        : Two optional lengths (representing min and max-width media-query breakpoints).
// $media-layout-2 ...-10 : [optional] Same as $media-layout-1
@mixin container(
  $media-layout-1   : $total-columns,
  $media-layout-2   : false,
  $media-layout-3   : false,
  $media-layout-4   : false,
  $media-layout-5   : false,
  $media-layout-6   : false,
  $media-layout-7   : false,
  $media-layout-8   : false,
  $media-layout-9   : false,
  $media-layout-10  : false
){
  $media-layouts    : compact($media-layout-2,$media-layout-3,$media-layout-4,$media-layout-5,$media-layout-6,$media-layout-7,$media-layout-8,$media-layout-9,$media-layout-10);

  @if is-default-layout($media-layout-1) {
    @include apply-container();
  } @else {
    @include at-breakpoint($media-layout-1) {
      @include apply-container();
    }
  }

  @each $ml in $media-layouts {
    @if $ml {
      @include at-breakpoint($ml) {
        @include set-container-width;
      }
    }
  }
}

// ---------------------------------------------------------------------------
// Columns

// Create a grid element spanning any number of 'columns' in a grid 'context'.
// $columns : The number of columns to span.
// $context : [optional] The context (columns spanned by parent).
//          : Context is required on any nested elements.
//          : Context MUST NOT be declared on a root element.
// $padding : [optional] Padding applied to the inside of individual grid columns.
//          : Padding is only output if one or two values are specified (e.g. 1em or 10px 20px)
//          : Padding values are applied only on the horizontal axis in from-to order
// $from    : The start direction of your layout (e.g. 'left' for ltr languages)

@mixin span-columns(
  $columns,
  $context       : $total-columns,
  $padding       : false,
  $from          : $from-direction
) {
  $to       : opposite-position($from);
  $pos      : split-columns-value($columns,position);
  $cols     : split-columns-value($columns,columns);
  $pad-from : relative-width(0 * $gutter-width, $context);
  $pad-to   : relative-width(0 * $gutter-width, $context);

  @if $padding != false {
    $pad-from : nth($padding, 1);

    @if length($padding) > 1 {
      $pad-to: nth($padding, 2);
    } @else {
      $pad-to: $pad-from;
    }

    $pad-from : relative-width($pad-from, $context);
    $pad-to   : relative-width($pad-to, $context);

    padding-#{$from}: $pad-from;
    padding-#{$to}: $pad-to;
  }

  width: columns($cols, $context) - if($border-box-sizing, 0, $pad-to + $pad-from);

  @if ($pos == 'omega') {
    @include omega($from);
  } @else {
    float: $from;
    margin-#{$to}: gutter($context);
    @if $legacy-support-for-ie6 {
      display: inline;
    }
  }
}

// Apply to elements spanning the last column, to account for the page edge.
// Only needed as an override. Normally 'omega' can just be called by `columns`.
//
// $from    : The start-direction for your document.
@mixin omega(
  $from     : $from-direction
) {
  $to     : opposite-position($from);
  $hack   : opposite-position($omega-float);

  float: $omega-float;
  margin-#{$to}: 0;

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    #margin-#{$hack}: - $gutter-width;
    @if $legacy-support-for-ie6 { display: inline; }
  }
}

// Shortcut to apply omega to a specific subset of elements.
//
// $n         : [first | only | last | <equation>]
// $selector  : [child | last-child | of-type | last-of-type ]
// $from      : The start-direction for your document.
@mixin nth-omega(
  $n        : last,
  $selector : child,
  $from     : $from-direction
) {
  $ie: if($n == "first", true, false);
  @include adjust-support-for($ie6: $ie, $ie7: $ie, $ie8: $ie) {
    &:#{format-nth($n,$selector)} { @include omega($from); }
  }
}

// ---------------------------------------------------------------------------
// Resets

// Reset a '+columns' grid element to default block behavior
//
// $from  : The start direction of your layout (e.g. 'left' for ltr languages)
@mixin reset-columns(
  $from: $from-direction
) {
  $to     : opposite-position($from);
  $hack   : opposite-position($omega-float);

  float: none;
  width: auto;
  margin-#{$to}: auto;

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    #margin-#{$hack}: auto;
    @if $legacy-support-for-ie6 { display: block; }
  }
}

// Apply to elements previously set as omega.
// This will return floats and margins back to non-omega settigns.
//
// $context : [optional] The context (columns spanned by parent).
// $from    : The start-direction for your document.
@mixin remove-omega(
  $context  : $total-columns,
  $from     : $from-direction
) {
  $to     : opposite-position($from);
  $hack   : opposite-position($omega-float);

  float: $from;
  margin-#{$to}: gutter($context);

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    #margin-#{$hack}: auto;
  }
}

// Shortcut to apply remove-omega to a specific subset of elements.
//
// $n         : [first | only | last | <equation>]
// $selector  : [child | last-child | of-type | last-of-type ]
// $context   : [optional] The context (columns spanned by parent).
// $from      : The start-direction for your document.
@mixin remove-nth-omega(
  $n        : last,
  $selector : child,
  $context  : $total-columns,
  $from     : $from-direction
) {
  $ie: if($n == "first", true, false);
  @include adjust-support-for($ie6: $ie, $ie7: $ie, $ie8: $ie) {
    &:#{format-nth($n,$selector)} { @include remove-omega($context,$from); }
  }
}

// ---------------------------------------------------------------------------
// Change Settings

@mixin with-grid-settings(
  $columns: $total-columns,
  $width: $column-width,
  $gutter: $gutter-width,
  $padding: $grid-padding
) {
  // keep the defaults around
  $default-columns: $total-columns;
  $default-width: $column-width;
  $default-gutter: $gutter-width;
  $default-padding: $grid-padding;

  // use the new settings
  $total-columns: $columns;
  $column-width: $width;
  $gutter-width: $gutter;
  $grid-padding: $padding;

  // apply to contents
  @content;

  // re-instate the defaults
  $total-columns: $default-columns;
  $column-width: $default-width;
  $gutter-width: $default-gutter;
  $grid-padding: $default-padding;
}
:@has_childrenT:@options{ :
@linei:@children["o:Sass::Tree::CommentNode
:
@type:silent:@value["a/* ---------------------------------------------------------------------------
 * Imports */;@;	i;
[ o:Sass::Tree::ImportNode
;0:@imported_filename"'compass/utilities/general/clearfix;@;	i	;
[ o;
;0;"compass/css3/box-sizing;@;	i
;
[ o;
;;;["k/* ---------------------------------------------------------------------------
 * Border-Box Sizing */;@;	i;
[ o;
;;;["g/* Apply the border-box sizing model to all elements
 * and adjust the grid math appropriately. */;@;	i;
[ o:Sass::Tree::MixinDefNode:@splat0;T:
@args[ ;@;	i:
@name"border-box-sizing;
[o:Sass::Tree::VariableNode;@;	i;"border-box-sizing;
[ :@guarded0:
@expro:Sass::Script::Bool;T;@;	io:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;	i:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
:@subject0;@%:@sourceso:Set:
@hash{ ;	i;[o:Sass::Selector::Universal:@namespace0;@%;	i;T;@;	i:
@tabsi ;
[o:Sass::Tree::MixinNode;0;[o:Sass::Script::String	;:identifier;"border-box;@;	i;@;	i:@keywords{ ;"box-sizing;
[ :
@rule["*o;
;;;["c/* ---------------------------------------------------------------------------
 * Container */;@;	i;
[ o;
;;;["d/* Set the width of a container
 *
 *  $columns  : The number of columns in the Grid Layout. */;@;	i;
[ o;;0;T;[[o:Sass::Script::Variable:@underscored_name"columns;@;"columnso;,	;-"total_columns;@;	i;"total-columns;@;	i;"set-container-width;
[o;;@;	i;"
width;
[ ;0;o:Sass::Script::Funcall;0;[o;,	;-"columns;@;	i;"columns;@;	i;*{ ;"container-outer-widthu:Sass::Tree::IfNodeÆ[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:string:@value"static:@options{ :
@linei!:@operand1o:Sass::Script::Variable	:@underscored_name"container_style;@	;i!:
@name"container-style:@operator:eq;@	;i!u:Sass::Tree::IfNodeB[00[u:Sass::Tree::IfNode"[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:string:@value"
fluid:@options{ :
@linei$:@operand1o:Sass::Script::Variable	:@underscored_name"container_style;@	;i$:
@name"container-style:@operator:eq;@	;i$u:Sass::Tree::IfNodeÑ[00[o:Sass::Tree::PropNode:@valueo:Sass::Script::Variable	:@underscored_name"
width:@options{ :
@linei':
@name"
width:@prop_syntax:new;	@
;
i':
@tabsi ;["max-width:@children[ u:Sass::Tree::IfNodeû[o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:@options{ :
@linei(:
@name"legacy-support-for-ie60[o:Sass::Tree::PropNode:@valueo; 	;"
width;@;i(;	"
width:@prop_syntax:new;@;i(:
@tabsi ;	["_width:@children[ [o:Sass::Tree::PropNode;
o:Sass::Script::Funcall:@splat0:
@args[o; 
;o;	;;	;
"%;@	;i%;o;;0;[o;	;"
width;@	;i%;"
width;@	;i%:@keywords{ ;"	unit;;;@	;i%o;	;"
width;@	;i%;"
widtho;	;:identifier;
"	auto;@	;i%;@	;i%;{ ;"if:@prop_syntax:new;@	;i%:
@tabsi ;["
width:@children[ [o:Sass::Tree::PropNode;
o;	;"
width;@	;i";"
width:@prop_syntax:new;@	;i":
@tabsi ;["
width:@children[ o;
;;;["o/* Set the outer grid-containing element(s).
 *
 *  $columns  : The number of columns in the container. */;@;	i-;
[ o;;0;T;[[o;,;-"columns;@;"columnso;,	;-"total_columns;@;	i1;"total-columns;@;	i2;"apply-container;
[	o;';0;[ ;@;	i3;*{ ;"pie-clearfix;
[ o;';0;[o;,	;-"columns;@;	i4;"columns;@;	i4;*{ ;"set-container-width;
[ o:Sass::Tree::PropNode;o;(;;);" ;@;T:@prop_syntax:new;@;	i5;&i ;["margin;
[o;0;o;(;;);"	auto;@;1;2;@;	i5;&i ;["	left;
[ o;0;o;(;;);"	auto;@;1;2;@;	i5;&i ;["
right;
[ o;0;o;(;;);" ;@;T;1;2;@;	i6;&i ;["padding;
[o;0;o;,	;-"grid_padding;@;	i6;"grid-padding;1;2;@;	i6;&i ;["	left;
[ o;0;o;,	;-"grid_padding;@;	i6;"grid-padding;1;2;@;	i6;&i ;["
right;
[ o;
;;;["¶/* Set one or more layouts on a grid-containing element at any number of media-query breakpoints.
 *
 * $media-layout-1        : [default:$total-columns] A list of values including -
 *                        : One unitless number (representing columns in a layout)
 *                        : Two optional lengths (representing min and max-width media-query breakpoints).
 * $media-layout-2 ...-10 : [optional] Same as $media-layout-1 */;@;	i9;
[ o;;0;T;[[o;,;-"media_layout_1;@;"media-layout-1o;,	;-"total_columns;@;	i@;"total-columns[o;,;-"media_layout_2;@;"media-layout-2o;;F;@;	iA[o;,;-"media_layout_3;@;"media-layout-3o;;F;@;	iB[o;,;-"media_layout_4;@;"media-layout-4o;;F;@;	iC[o;,;-"media_layout_5;@;"media-layout-5o;;F;@;	iD[o;,;-"media_layout_6;@;"media-layout-6o;;F;@;	iE[o;,;-"media_layout_7;@;"media-layout-7o;;F;@;	iF[o;,;-"media_layout_8;@;"media-layout-8o;;F;@;	iG[o;,;-"media_layout_9;@;"media-layout-9o;;F;@;	iH[o;,;-"media_layout_10;@;"media-layout-10o;;F;@;	iI;@;	iJ;"container;
[o;;@;	iK;"media-layouts;
[ ;0;o;.;0;[o;,	;-"media_layout_2;@;	iK;"media-layout-2o;,	;-"media_layout_3;@;	iK;"media-layout-3o;,	;-"media_layout_4;@;	iK;"media-layout-4o;,	;-"media_layout_5;@;	iK;"media-layout-5o;,	;-"media_layout_6;@;	iK;"media-layout-6o;,	;-"media_layout_7;@;	iK;"media-layout-7o;,	;-"media_layout_8;@;	iK;"media-layout-8o;,	;-"media_layout_9;@;	iK;"media-layout-9o;,	;-"media_layout_10;@;	iK;"media-layout-10;@;	iK;*{ ;"compactu;/5[o:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"media_layout_1:@options{ :
@lineiM:
@name"media-layout-1;
@
;iM:@keywords{ ;"is-default-layoutu:Sass::Tree::IfNode[00[o:Sass::Tree::MixinNode:@splat0:@has_childrenT:
@args[o:Sass::Script::Variable	:@underscored_name"media_layout_1:@options{ :
@lineiP:
@name"media-layout-1;@;iP:@keywords{ ;"at-breakpoint:@children[o; ;0;[ ;@;iQ;{ ;"apply-container;[ [o:Sass::Tree::MixinNode;0;[ ;
@
;iN;{ ;"apply-container:@children[ o:Sass::Tree::EachNode;T;@;	iU;
[u;/[o:Sass::Script::Variable	:@underscored_name"ml:@options{ :
@lineiV:
@name"ml0[o:Sass::Tree::MixinNode:@splat0:@has_childrenT:
@args[o; 	;"ml;@;iW;	"ml;@;iW:@keywords{ ;	"at-breakpoint:@children[o;
;0;[ ;@;iX;{ ;	"set-container-width;[ :	@var"ml:
@listo;,	;-"media_layouts;@;	iU;"media-layoutso;
;;;["a/* ---------------------------------------------------------------------------
 * Columns */;@;	i^;
[ o;
;;;["/* Create a grid element spanning any number of 'columns' in a grid 'context'.
 * $columns : The number of columns to span.
 * $context : [optional] The context (columns spanned by parent).
 *          : Context is required on any nested elements.
 *          : Context MUST NOT be declared on a root element.
 * $padding : [optional] Padding applied to the inside of individual grid columns.
 *          : Padding is only output if one or two values are specified (e.g. 1em or 10px 20px)
 *          : Padding values are applied only on the horizontal axis in from-to order
 * $from    : The start direction of your layout (e.g. 'left' for ltr languages) */;@;	ia;
[ o;;0;T;[	[o;,;-"columns;@;"columns0[o;,;-"context;@;"contexto;,	;-"total_columns;@;	im;"total-columns[o;,;-"padding;@;"paddingo;;F;@;	in[o;,;-"	from;@;"	fromo;,	;-"from_direction;@;	io;"from-direction;@;	ip;"span-columns;
[o;;@;	iq;"to;
[ ;0;o;.;0;[o;,	;-"	from;@;	iq;"	from;@;	iq;*{ ;"opposite-positiono;;@;	ir;"pos;
[ ;0;o;.;0;[o;,	;-"columns;@;	ir;"columnso;(	;;);"position;@;	ir;@;	ir;*{ ;"split-columns-valueo;;@;	is;"	cols;
[ ;0;o;.;0;[o;,	;-"columns;@;	is;"columnso;(	;;);"columns;@;	is;@;	is;*{ ;"split-columns-valueo;;@;	it;"pad-from;
[ ;0;o;.;0;[o:Sass::Script::Operation
:@operand2o;,	;-"gutter_width;@;	it;"gutter-width:@operand1o:Sass::Script::Number;i :@denominator_units[ ;@;	it:@numerator_units[ :@original"0:@operator:
times;@;	ito;,	;-"context;@;	it;"context;@;	it;*{ ;"relative-widtho;;@;	iu;"pad-to;
[ ;0;o;.;0;[o;6
;7o;,	;-"gutter_width;@;	iu;"gutter-width;8o;9;i ;:@H;@;	iu;;[ ;<"0;=;>;@;	iuo;,	;-"context;@;	iu;"context;@;	iu;*{ ;"relative-widthu;/Þ[o:Sass::Script::Operation
:@operand2o:Sass::Script::Bool:@valueF:@options{ :
@lineiw:@operand1o:Sass::Script::Variable	:@underscored_name"padding;	@;
iw:
@name"padding:@operator:neq;	@;
iw0[o:Sass::Tree::VariableNode;	@;
ix;"pad-from:@children[ :@guarded0:
@expro:Sass::Script::Funcall:@splat0:
@args[o;	;"padding;	@;
ix;"paddingo:Sass::Script::Number;i:@denominator_units[ ;	@;
ix:@numerator_units[ :@original"1;	@;
ix:@keywords{ ;"nthu:Sass::Tree::IfNodeÈ[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@valuei:@denominator_units[ :@options{ :
@lineiz:@numerator_units[ :@original"1:@operand1o:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"padding;
@	;iz:
@name"padding;
@	;iz:@keywords{ ;"length:@operator:gt;
@	;izu:Sass::Tree::IfNode²[00[o:Sass::Tree::VariableNode:@options{ :
@linei}:
@name"pad-to:@children[ :@guarded0:
@expro:Sass::Script::Variable	:@underscored_name"pad_from;@;i};"pad-from[o:Sass::Tree::VariableNode;
@	;i{;"pad-to:@children[ :@guarded0:
@expro;;0;[o;	;"padding;
@	;i{;"paddingo;;i;	@;
@	;i{;[ ;"2;
@	;i{;{ ;"ntho;;	@;
i{;"pad-from;[ ;0;o;;0;[o;	;"pad_from;	@;
i{;"pad-fromo;	;"context;	@;
i{;"context;	@;
i{;{ ;"relative-widtho;;	@;
i|;"pad-to;[ ;0;o;;0;[o;	;"pad_to;	@;
i|;"pad-too;	;"context;	@;
i|;"context;	@;
i|;{ ;"relative-widtho:Sass::Tree::PropNode;o;	;"pad_from;	@;
i~;"pad-from:@prop_syntax:new;	@;
i~:
@tabsi ;["padding-o;	;"	from;	@;
i~;"	from;[ o;;o;	;"pad_to;	@;
i;"pad-to;; ;	@;
i;!i ;["padding-o;	;"to;	@;
i;"to;[ o;0;o;6
;7o;.;0;[o;,	;-"border_box_sizing;@;	i;"border-box-sizingo;9;i ;:@H;@;	i;;[ ;<"0o;6
;7o;,	;-"pad_from;@;	i;"pad-from;8o;,	;-"pad_to;@;	i;"pad-to;=:	plus;@;	i;@;	i;*{ ;"if;8o;.;0;[o;,	;-"	cols;@;	i;"	colso;,	;-"context;@;	i;"context;@;	i;*{ ;"columns;=:
minus;@;	i;1;2;@;	i;&i ;["
width;
[ u;/	[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:string:@value"
omega:@options{ :
@linei:@operand1o:Sass::Script::Variable	:@underscored_name"pos;@	;i:
@name"pos:@operator:eq;@	;iu:Sass::Tree::IfNode[00[o:Sass::Tree::PropNode:@valueo:Sass::Script::Variable	:@underscored_name"	from:@options{ :
@linei:
@name"	from:@prop_syntax:new;	@
;
i:
@tabsi ;["
float:@children[ o; ;o:Sass::Script::Funcall:@splat0:
@args[o;	;"context;	@
;
i;"context;	@
;
i:@keywords{ ;"gutter;;;	@
;
i;i ;["margin-o;	;"to;	@
;
i;"to;[ u:Sass::Tree::IfNode[o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:@options{ :
@linei:
@name"legacy-support-for-ie60[o:Sass::Tree::PropNode:@valueo:Sass::Script::String:
@type:identifier;"inline;@:@prop_syntax:new;@;i:
@tabsi ;	["display:@children[ [o:Sass::Tree::MixinNode:@splat0:
@args[o;	;"	from;@	;i;"	from;@	;i:@keywords{ ;"
omega:@children[ o;
;;;["Ø/* Apply to elements spanning the last column, to account for the page edge.
 * Only needed as an override. Normally 'omega' can just be called by `columns`.
 *
 * $from    : The start-direction for your document. */;@;	i;
[ o;;0;T;[[o;,;-"	from;@;"	fromo;,	;-"from_direction;@;	i;"from-direction;@;	i;"
omega;
[
o;;@;	i;"to;
[ ;0;o;.;0;[o;,	;-"	from;@;	i;"	from;@;	i;*{ ;"opposite-positiono;;@;	i;"	hack;
[ ;0;o;.;0;[o;,	;-"omega_float;@;	i;"omega-float;@;	i;*{ ;"opposite-positiono;0;o;,	;-"omega_float;@;	i;"omega-float;1;2;@;	i;&i ;["
float;
[ o;0;o;(;;);"0;@;1;2;@;	i;&i ;["margin-o;,	;-"to;@;	i;"to;
[ u;/"[o:Sass::Script::Operation
:@operand2o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie7:@options{ :
@linei:
@name"legacy-support-for-ie7:@operand1o;	;"legacy_support_for_ie6;	@	;
i;"legacy-support-for-ie6:@operator:or;	@	;
i0[o:Sass::Tree::PropNode:@valueo:!Sass::Script::UnaryOperation	;:
minus:@operando;	;"gutter_width;	@	;
i;"gutter-width;	@	;
i:@prop_syntax:new;	@	;
i:
@tabsi ;["#margin-o;	;"	hack;	@	;
i;"	hack:@children[ u:Sass::Tree::IfNode[o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:@options{ :
@linei:
@name"legacy-support-for-ie60[o:Sass::Tree::PropNode:@valueo:Sass::Script::String:
@type:identifier;"inline;@:@prop_syntax:new;@;i:
@tabsi ;	["display:@children[ o;
;;;["ë/* Shortcut to apply omega to a specific subset of elements.
 *
 * $n         : [first | only | last | <equation>]
 * $selector  : [child | last-child | of-type | last-of-type ]
 * $from      : The start-direction for your document. */;@;	i¢;
[ o;;0;T;[[o;,;-"n;@;"no;(	;;);"	last;@;	i¨[o;,;-"selector;@;"selectoro;(	;;);"
child;@;	i©[o;,;-"	from;@;"	fromo;,	;-"from_direction;@;	iª;"from-direction;@;	i«;"nth-omega;
[o;;@;	i¬;"ie;
[ ;0;o;.;0;[o;6
;7o;(	;:string;"
first;@;	i¬;8o;,	;-"n;@;	i¬;"n;=:eq;@;	i¬o;;T;@;	i¬o;;F;@;	i¬;@;	i¬;*{ ;"ifo;';0;T;[ ;@;	i­;*{"ie7o;,	;-"ie;@;	i­;"ie"ie8o;,	;-"ie;@;	i­;"ie"ie6o;,	;-"ie;@;	i­;"ie;"adjust-support-for;
[o;;T;@;	i®;&i ;
[o;';0;[o;,	;-"	from;@;	i®;"	from;@;	i®;*{ ;"
omega;
[ ;+["&:o;.;0;[o;,	;-"n;@;	i®;"no;,	;-"selector;@;	i®;"selector;@;	i®;*{ ;"format-ntho;
;;;["`/* ---------------------------------------------------------------------------
 * Resets */;@;	i²;
[ o;
;;;["/* Reset a '+columns' grid element to default block behavior
 *
 * $from  : The start direction of your layout (e.g. 'left' for ltr languages) */;@;	iµ;
[ o;;0;T;[[o;,;-"	from;@;"	fromo;,	;-"from_direction;@;	i¹;"from-direction;@;	iº;"reset-columns;
[o;;@;	i»;"to;
[ ;0;o;.;0;[o;,	;-"	from;@;	i»;"	from;@;	i»;*{ ;"opposite-positiono;;@;	i¼;"	hack;
[ ;0;o;.;0;[o;,	;-"omega_float;@;	i¼;"omega-float;@;	i¼;*{ ;"opposite-positiono;0;o;(;;);"	none;@;1;2;@;	i¾;&i ;["
float;
[ o;0;o;(;;);"	auto;@;1;2;@;	i¿;&i ;["
width;
[ o;0;o;(;;);"	auto;@;1;2;@;	iÀ;&i ;["margin-o;,	;-"to;@;	iÀ;"to;
[ u;/ï[o:Sass::Script::Operation
:@operand2o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie7:@options{ :
@lineiÂ:
@name"legacy-support-for-ie7:@operand1o;	;"legacy_support_for_ie6;	@	;
iÂ;"legacy-support-for-ie6:@operator:or;	@	;
iÂ0[o:Sass::Tree::PropNode:@valueo:Sass::Script::String:
@type:identifier;"	auto;	@	:@prop_syntax:new;	@	;
iÃ:
@tabsi ;["#margin-o;	;"	hack;	@	;
iÃ;"	hack:@children[ u:Sass::Tree::IfNode[o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie6:@options{ :
@lineiÄ:
@name"legacy-support-for-ie60[o:Sass::Tree::PropNode:@valueo:Sass::Script::String:
@type:identifier;"
block;@:@prop_syntax:new;@;iÄ:
@tabsi ;	["display:@children[ o;
;;;["í/* Apply to elements previously set as omega.
 * This will return floats and margins back to non-omega settigns.
 *
 * $context : [optional] The context (columns spanned by parent).
 * $from    : The start-direction for your document. */;@;	iÈ;
[ o;;0;T;[[o;,;-"context;@;"contexto;,	;-"total_columns;@;	iÎ;"total-columns[o;,;-"	from;@;"	fromo;,	;-"from_direction;@;	iÏ;"from-direction;@;	iÐ;"remove-omega;
[
o;;@;	iÑ;"to;
[ ;0;o;.;0;[o;,	;-"	from;@;	iÑ;"	from;@;	iÑ;*{ ;"opposite-positiono;;@;	iÒ;"	hack;
[ ;0;o;.;0;[o;,	;-"omega_float;@;	iÒ;"omega-float;@;	iÒ;*{ ;"opposite-positiono;0;o;,	;-"	from;@;	iÔ;"	from;1;2;@;	iÔ;&i ;["
float;
[ o;0;o;.;0;[o;,	;-"context;@;	iÕ;"context;@;	iÕ;*{ ;"gutter;1;2;@;	iÕ;&i ;["margin-o;,	;-"to;@;	iÕ;"to;
[ u;/¿[o:Sass::Script::Operation
:@operand2o:Sass::Script::Variable	:@underscored_name"legacy_support_for_ie7:@options{ :
@linei×:
@name"legacy-support-for-ie7:@operand1o;	;"legacy_support_for_ie6;	@	;
i×;"legacy-support-for-ie6:@operator:or;	@	;
i×0[o:Sass::Tree::PropNode:@valueo:Sass::Script::String:
@type:identifier;"	auto;	@	:@prop_syntax:new;	@	;
iØ:
@tabsi ;["#margin-o;	;"	hack;	@	;
iØ;"	hack:@children[ o;
;;;["6/* Shortcut to apply remove-omega to a specific subset of elements.
 *
 * $n         : [first | only | last | <equation>]
 * $selector  : [child | last-child | of-type | last-of-type ]
 * $context   : [optional] The context (columns spanned by parent).
 * $from      : The start-direction for your document. */;@;	iÜ;
[ o;;0;T;[	[o;,;-"n;@;"no;(	;;);"	last;@;	iã[o;,;-"selector;@;"selectoro;(	;;);"
child;@;	iä[o;,;-"context;@;"contexto;,	;-"total_columns;@;	iå;"total-columns[o;,;-"	from;@;"	fromo;,	;-"from_direction;@;	iæ;"from-direction;@;	iç;"remove-nth-omega;
[o;;@;	iè;"ie;
[ ;0;o;.;0;[o;6
;7o;(	;;A;"
first;@;	iè;8o;,	;-"n;@;	iè;"n;=;B;@;	ièo;;T;@;	ièo;;F;@;	iè;@;	iè;*{ ;"ifo;';0;T;[ ;@;	ié;*{"ie7o;,	;-"ie;@;	ié;"ie"ie8o;,	;-"ie;@;	ié;"ie"ie6o;,	;-"ie;@;	ié;"ie;"adjust-support-for;
[o;;T;@;	iê;&i ;
[o;';0;[o;,	;-"context;@;	iê;"contexto;,	;-"	from;@;	iê;"	from;@;	iê;*{ ;"remove-omega;
[ ;+["&:o;.;0;[o;,	;-"n;@;	iê;"no;,	;-"selector;@;	iê;"selector;@;	iê;*{ ;"format-ntho;
;;;["i/* ---------------------------------------------------------------------------
 * Change Settings */;@;	iî;
[ o;;0;T;[	[o;,;-"columns;@;"columnso;,	;-"total_columns;@;	iò;"total-columns[o;,;-"
width;@;"
widtho;,	;-"column_width;@;	ió;"column-width[o;,;-"gutter;@;"guttero;,	;-"gutter_width;@;	iô;"gutter-width[o;,;-"padding;@;"paddingo;,	;-"grid_padding;@;	iõ;"grid-padding;@;	iö;"with-grid-settings;
[o;
;;;["#/* keep the defaults around */;@;	i÷;
[ o;;@;	iø;"default-columns;
[ ;0;o;,	;-"total_columns;@;	iø;"total-columnso;;@;	iù;"default-width;
[ ;0;o;,	;-"column_width;@;	iù;"column-widtho;;@;	iú;"default-gutter;
[ ;0;o;,	;-"gutter_width;@;	iú;"gutter-widtho;;@;	iû;"default-padding;
[ ;0;o;,	;-"grid_padding;@;	iû;"grid-paddingo;
;;;["/* use the new settings */;@;	iý;
[ o;;@;	iþ;"total-columns;
[ ;0;o;,	;-"columns;@;	iþ;"columnso;;@;	iÿ;"column-width;
[ ;0;o;,	;-"
width;@;	iÿ;"
widtho;;@;	i ;"gutter-width;
[ ;0;o;,	;-"gutter;@;	i ;"guttero;;@;	i;"grid-padding;
[ ;0;o;,	;-"padding;@;	i;"paddingo;
;;;["/* apply to contents */;@;	i;
[ o:Sass::Tree::ContentNode;@;	i;
[ o;
;;;[""/* re-instate the defaults */;@;	i;
[ o;;@;	i;"total-columns;
[ ;0;o;,	;-"default_columns;@;	i;"default-columnso;;@;	i;"column-width;
[ ;0;o;,	;-"default_width;@;	i;"default-widtho;;@;	i	;"gutter-width;
[ ;0;o;,	;-"default_gutter;@;	i	;"default-guttero;;@;	i
;"grid-padding;
[ ;0;o;,	;-"default_padding;@;	i
;"default-padding