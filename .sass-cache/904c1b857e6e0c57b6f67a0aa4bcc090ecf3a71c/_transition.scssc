3.2.1 (Media Mark)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@has_childrenT:@options{ :
@linei:@children[o:Sass::Tree::ImportNode
;0:@imported_filename"shared;@;	i;
[ o:Sass::Tree::CommentNode
:
@type:silent:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;@;	i;
[ o:Sass::Tree::VariableNode;@;	i:
@name" default-transition-property;
[ :@guarded"!default:
@expro:Sass::Script::String	;:identifier;"all;@;	io;;@;	i;" default-transition-duration;
[ ;"!default;o:Sass::Script::Number;i:@denominator_units[ ;@;	i:@numerator_units["s:@original"1so;;@;	i;" default-transition-function;
[ ;"!default;o:Sass::Script::Bool;F;@;	io;;@;	i;"default-transition-delay;
[ ;"!default;o;;F;@;	io;;@;	i;"#transitionable-prefixed-values;
[ ;"!default;o:Sass::Script::List	:@separator:
comma;[o;	;;;"transform;@;	io;	;;;"transform-origin;@;	i;@;	io;
;;;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;@;	i!;
[ o:Sass::Tree::MixinDefNode:@splat0;T:
@args[[o:Sass::Script::Variable:@underscored_name"property_1;@;"property-1o;"	;#" default_transition_property;@;	i&;" default-transition-property[o;";#"property_2;@;"property-2o;;F;@;	i'[o;";#"property_3;@;"property-3o;;F;@;	i([o;";#"property_4;@;"property-4o;;F;@;	i)[o;";#"property_5;@;"property-5o;;F;@;	i*[o;";#"property_6;@;"property-6o;;F;@;	i+[o;";#"property_7;@;"property-7o;;F;@;	i,[o;";#"property_8;@;"property-8o;;F;@;	i-[o;";#"property_9;@;"property-9o;;F;@;	i.[o;";#"property_10;@;"property-10o;;F;@;	i/;@;	i0;"transition-property;
[u:Sass::Tree::IfNodeÙ[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"string:@options{ :
@linei1:@operand1o:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"property_1;@	;i1:
@name"property-1;@	;i1:@keywords{ ;"type-of:@operator:eq;@	;i10[o:Sass::Tree::VariableNode;@	;i1;"property-1:@children[ :@guarded0:
@expro;;0;[o;	;"property_1;@	;i1;"property-1;@	;i1;{ ;"unquoteo;;@;	i2;"properties;
[ ;0;o:Sass::Script::Funcall; 0;![o;"	;#"property_1;@;	i2;"property-1o;"	;#"property_2;@;	i2;"property-2o;"	;#"property_3;@;	i2;"property-3o;"	;#"property_4;@;	i2;"property-4o;"	;#"property_5;@;	i2;"property-5o;"	;#"property_6;@;	i2;"property-6o;"	;#"property_7;@;	i2;"property-7o;"	;#"property_8;@;	i2;"property-8o;"	;#"property_9;@;	i2;"property-9o;"	;#"property_10;@;	i2;"property-10;@;	i2:@keywords{ ;"compactu;$Å[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:@options{ :
@linei3:
@name"$experimental-support-for-webkit0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::String	:
@type:identifier;"-webkit;@;i3o; 	;"properties;@;i3;	"properties;@;i3:@keywords{ ;	"prefixed-for-transition:@prop_syntax:new;@;i3:
@tabsi ;	[" -webkit-transition-property:@children[ u;$Á[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:@options{ :
@linei4:
@name"%experimental-support-for-mozilla0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::String	:
@type:identifier;"	-moz;@;i4o; 	;"properties;@;i4;	"properties;@;i4:@keywords{ ;	"prefixed-for-transition:@prop_syntax:new;@;i4:
@tabsi ;	["-moz-transition-property:@children[ u;$¹[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:@options{ :
@linei5:
@name"#experimental-support-for-opera0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::String	:
@type:identifier;"-o;@;i5o; 	;"properties;@;i5;	"properties;@;i5:@keywords{ ;	"prefixed-for-transition:@prop_syntax:new;@;i5:
@tabsi ;	["-o-transition-property:@children[ o:Sass::Tree::PropNode;o;"	;#"properties;@;	i6;"properties:@prop_syntax:new;@;	i6:
@tabsi ;["transition-property;
[ o;
;;;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;@;	i9;
[ o;; 0;T;![[o;";#"duration_1;@;"duration-1o;"	;#" default_transition_duration;@;	i>;" default-transition-duration[o;";#"duration_2;@;"duration-2o;;F;@;	i?[o;";#"duration_3;@;"duration-3o;;F;@;	i@[o;";#"duration_4;@;"duration-4o;;F;@;	iA[o;";#"duration_5;@;"duration-5o;;F;@;	iB[o;";#"duration_6;@;"duration-6o;;F;@;	iC[o;";#"duration_7;@;"duration-7o;;F;@;	iD[o;";#"duration_8;@;"duration-8o;;F;@;	iE[o;";#"duration_9;@;"duration-9o;;F;@;	iF[o;";#"duration_10;@;"duration-10o;;F;@;	iG;@;	iH;"transition-duration;
[u;$Ù[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"string:@options{ :
@lineiI:@operand1o:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"duration_1;@	;iI:
@name"duration-1;@	;iI:@keywords{ ;"type-of:@operator:eq;@	;iI0[o:Sass::Tree::VariableNode;@	;iI;"duration-1:@children[ :@guarded0:
@expro;;0;[o;	;"duration_1;@	;iI;"duration-1;@	;iI;{ ;"unquoteo;;@;	iJ;"durations;
[ ;0;o;%; 0;![o;"	;#"duration_1;@;	iJ;"duration-1o;"	;#"duration_2;@;	iJ;"duration-2o;"	;#"duration_3;@;	iJ;"duration-3o;"	;#"duration_4;@;	iJ;"duration-4o;"	;#"duration_5;@;	iJ;"duration-5o;"	;#"duration_6;@;	iJ;"duration-6o;"	;#"duration_7;@;	iJ;"duration-7o;"	;#"duration_8;@;	iJ;"duration-8o;"	;#"duration_9;@;	iJ;"duration-9o;"	;#"duration_10;@;	iJ;"duration-10;@;	iJ;&{ ;"compacto:Sass::Tree::MixinNode; 0;![o;	;;;"transition-duration;@;	iKo;"	;#"durations;@;	iK;"durationso;	;;;"	-moz;@;	iLo;	;;;"-webkit;@;	iLo;	;;;"-o;@;	iLo:!Sass::Script::UnaryOperation	:@operator:not:@operando;	;;;"-ms;@;	iL;@;	iLo;,	;-;.;/o;	;;;"-khtml;@;	iL;@;	iLo;	;;;"official;@;	iL;@;	iM;&{ ;"experimental;
[ o;
;;;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;@;	iP;
[ o;; 0;T;![[o;";#"function_1;@;"function-1o;"	;#" default_transition_function;@;	iV;" default-transition-function[o;";#"function_2;@;"function-2o;;F;@;	iW[o;";#"function_3;@;"function-3o;;F;@;	iX[o;";#"function_4;@;"function-4o;;F;@;	iY[o;";#"function_5;@;"function-5o;;F;@;	iZ[o;";#"function_6;@;"function-6o;;F;@;	i[[o;";#"function_7;@;"function-7o;;F;@;	i\[o;";#"function_8;@;"function-8o;;F;@;	i][o;";#"function_9;@;"function-9o;;F;@;	i^[o;";#"function_10;@;"function-10o;;F;@;	i_;@;	i`;"transition-timing-function;
[o;;@;	ia;"function-1;
[ ;0;o;%; 0;![o;"	;#"function_1;@;	ia;"function-1;@;	ia;&{ ;"unquoteo;;@;	ib;"functions;
[ ;0;o;%; 0;![o;"	;#"function_1;@;	ib;"function-1o;"	;#"function_2;@;	ib;"function-2o;"	;#"function_3;@;	ib;"function-3o;"	;#"function_4;@;	ib;"function-4o;"	;#"function_5;@;	ib;"function-5o;"	;#"function_6;@;	ib;"function-6o;"	;#"function_7;@;	ib;"function-7o;"	;#"function_8;@;	ib;"function-8o;"	;#"function_9;@;	ib;"function-9o;"	;#"function_10;@;	ib;"function-10;@;	ib;&{ ;"compacto;+; 0;![o;	;;;"transition-timing-function;@;	ico;"	;#"functions;@;	ic;"functionso;	;;;"	-moz;@;	ido;	;;;"-webkit;@;	ido;	;;;"-o;@;	ido;,	;-;.;/o;	;;;"-ms;@;	id;@;	ido;,	;-;.;/o;	;;;"-khtml;@;	id;@;	ido;	;;;"official;@;	id;@;	ie;&{ ;"experimental;
[ o;
;;;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;@;	ih;
[ o;; 0;T;![[o;";#"delay_1;@;"delay-1o;"	;#"default_transition_delay;@;	im;"default-transition-delay[o;";#"delay_2;@;"delay-2o;;F;@;	in[o;";#"delay_3;@;"delay-3o;;F;@;	io[o;";#"delay_4;@;"delay-4o;;F;@;	ip[o;";#"delay_5;@;"delay-5o;;F;@;	iq[o;";#"delay_6;@;"delay-6o;;F;@;	ir[o;";#"delay_7;@;"delay-7o;;F;@;	is[o;";#"delay_8;@;"delay-8o;;F;@;	it[o;";#"delay_9;@;"delay-9o;;F;@;	iu[o;";#"delay_10;@;"delay-10o;;F;@;	iv;@;	iw;"transition-delay;
[u;$Ê[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"string:@options{ :
@lineix:@operand1o:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"delay_1;@	;ix:
@name"delay-1;@	;ix:@keywords{ ;"type-of:@operator:eq;@	;ix0[o:Sass::Tree::VariableNode;@	;ix;"delay-1:@children[ :@guarded0:
@expro;;0;[o;	;"delay_1;@	;ix;"delay-1;@	;ix;{ ;"unquoteo;;@;	iy;"delays;
[ ;0;o;%; 0;![o;"	;#"delay_1;@;	iy;"delay-1o;"	;#"delay_2;@;	iy;"delay-2o;"	;#"delay_3;@;	iy;"delay-3o;"	;#"delay_4;@;	iy;"delay-4o;"	;#"delay_5;@;	iy;"delay-5o;"	;#"delay_6;@;	iy;"delay-6o;"	;#"delay_7;@;	iy;"delay-7o;"	;#"delay_8;@;	iy;"delay-8o;"	;#"delay_9;@;	iy;"delay-9o;"	;#"delay_10;@;	iy;"delay-10;@;	iy;&{ ;"compacto;+; 0;![o;	;;;"transition-delay;@;	izo;"	;#"delays;@;	iz;"delayso;	;;;"	-moz;@;	i{o;	;;;"-webkit;@;	i{o;	;;;"-o;@;	i{o;,	;-;.;/o;	;;;"-ms;@;	i{;@;	i{o;,	;-;.;/o;	;;;"-khtml;@;	i{;@;	i{o;	;;;"official;@;	i{;@;	i|;&{ ;"experimental;
[ o;
;;;["*/* Transition all-in-one shorthand */;@;	i;
[ o;; 0;T;![	[o;";#"property;@;"propertyo;"	;#" default_transition_property;@;	i};" default-transition-property[o;";#"duration;@;"durationo;"	;#" default_transition_duration;@;	i~;" default-transition-duration[o;";#"function;@;"functiono;"	;#" default_transition_function;@;	i;" default-transition-function[o;";#"
delay;@;"
delayo;"	;#"default_transition_delay;@;	i;"default-transition-delay;@;	i;"single-transition;
[o;+; 0;![o;%; 0;![o;	;:
space;[	o;"	;#"property;@;	i;"propertyo;"	;#"duration;@;	i;"durationo;"	;#"function;@;	i;"functiono;"	;#"
delay;@;	i;"
delay;@;	i;@;	i;&{ ;"compact;@;	i;&{ ;"transition;
[ o;; 0;T;![[o;";#"transition_1;@;"transition-1o;	;;;"default;@;	i[o;";#"transition_2;@;"transition-2o;;F;@;	i[o;";#"transition_3;@;"transition-3o;;F;@;	i[o;";#"transition_4;@;"transition-4o;;F;@;	i[o;";#"transition_5;@;"transition-5o;;F;@;	i[o;";#"transition_6;@;"transition-6o;;F;@;	i[o;";#"transition_7;@;"transition-7o;;F;@;	i[o;";#"transition_8;@;"transition-8o;;F;@;	i[o;";#"transition_9;@;"transition-9o;;F;@;	i[o;";#"transition_10;@;"transition-10o;;F;@;	i;@;	i;"transition;
[u;$÷[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"default:@options{ :
@linei:@operand1o:Sass::Script::Variable	:@underscored_name"transition_1;@	;i:
@name"transition-1:@operator:eq;@	;i0[o:Sass::Tree::VariableNode;@	;i;"transition-1:@children[ :@guarded0:
@expro:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::List	:@separator:
space;
[	o;	;" default_transition_property;@	;i;" default-transition-propertyo;	;" default_transition_duration;@	;i;" default-transition-durationo;	;" default_transition_function;@	;i;" default-transition-functiono;	;"default_transition_delay;@	;i;"default-transition-delay;@	;i;@	;i:@keywords{ ;"compacto;;@;	i;"transitions;
[ ;0;o;;F;@;	iu;$[o:Sass::Script::Operation
:@operand2o; 
;o:Sass::Script::String	:
@type:identifier:@value"	list:@options{ :
@linei:@operand1o:Sass::Script::Funcall:@splat0:
@args[o;;0;[o:Sass::Script::Variable	:@underscored_name"transition_1;@
;i:
@name"transition-1o:Sass::Script::Number;
i:@denominator_units[ ;@
;i:@numerator_units[ :@original"1;@
;i:@keywords{ ;"nth;@
;i;{ ;"type-of:@operator:eq;@
;i;o; 
;o;	;;	;
"	list;@
;i;o;;0;[o;	;"transition_1;@
;i;"transition-1;@
;i;{ ;"type-of;;;@
;i;:and;@
;iu:Sass::Tree::IfNode¤[00[o:Sass::Tree::VariableNode:@options{ :
@linei:
@name"transitions:@children[ :@guarded0:
@expro:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"transition_1;@;i;"transition-1o;	;"transition_2;@;i;"transition-2o;	;"transition_3;@;i;"transition-3o;	;"transition_4;@;i;"transition-4o;	;"transition_5;@;i;"transition-5o;	;"transition_6;@;i;"transition-6o;	;"transition_7;@;i;"transition-7o;	;"transition_8;@;i;"transition-8o;	;"transition_9;@;i;"transition-9o;	;"transition_10;@;i;"transition-10;@;i:@keywords{ ;"compact[o:Sass::Tree::VariableNode;@
;i;"transitions:@children[ :@guarded0:
@expro;;0;[o;	;"transition_1;@
;i;"transition-1o;;0;[o;	;"transition_2;@
;i;"transition-2o;	;"transition_3;@
;i;"transition-3o;	;"transition_4;@
;i;"transition-4o;	;"transition_5;@
;i;"transition-5o;	;"transition_6;@
;i;"transition-6o;	;"transition_7;@
;i;"transition-7o;	;"transition_8;@
;i;"transition-8o;	;"transition_9;@
;i;"transition-9o;	;"transition_10;@
;i;"transition-10;@
;i;{ ;"compacto;	;;	;
"
comma;@
;i;@
;i;{ ;"	joino;;@;	i;"delays;
[ ;0;o;%; 0;![ ;@;	i;&{ ;"comma-listo;;@;	i;"has-delays;
[ ;0;o;;F;@;	io;;@;	i;"webkit-value;
[ ;0;o;%; 0;![ ;@;	i;&{ ;"comma-listo;;@;	i;"moz-value;
[ ;0;o;%; 0;![ ;@;	i;&{ ;"comma-listo;;@;	i;"o-value;
[ ;0;o;%; 0;![ ;@;	i;&{ ;"comma-listo;
;;;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;@;	i ;
[ o:Sass::Tree::EachNode;T;@;	i¢;
[o;
;;;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;@;	i£;
[ o;;@;	i¥;"property;
[ ;0;o;%; 0;![o;"	;#"transition;@;	i¥;"transitiono;;i;[ ;@;	i¥;[ ;"1;@;	i¥;&{ ;"ntho;;@;	i¦;"duration;
[ ;0;o;;F;@;	i¦o;;@;	i§;"timing-function;
[ ;0;o;;F;@;	i§o;;@;	i¨;"
delay;
[ ;0;o;;F;@;	i¨u;$[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@valuei:@denominator_units[ :@options{ :
@linei©:@numerator_units[ :@original"1:@operand1o:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"transition;
@	;i©:
@name"transition;
@	;i©:@keywords{ ;"length:@operator:gt;
@	;i©0[o:Sass::Tree::VariableNode;
@	;i©;"duration:@children[ :@guarded0:
@expro;;0;[o;	;"transition;
@	;i©;"transitiono;;i;	@;
@	;i©;[ ;"2;
@	;i©;{ ;"nthu;$[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@valuei:@denominator_units[ :@options{ :
@lineiª:@numerator_units[ :@original"2:@operand1o:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"transition;
@	;iª:
@name"transition;
@	;iª:@keywords{ ;"length:@operator:gt;
@	;iª0[o:Sass::Tree::VariableNode;
@	;iª;"timing-function:@children[ :@guarded0:
@expro;;0;[o;	;"transition;
@	;iª;"transitiono;;i;	@;
@	;iª;[ ;"3;
@	;iª;{ ;"nthu;$Y[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@valuei:@denominator_units[ :@options{ :
@linei«:@numerator_units[ :@original"3:@operand1o:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"transition;
@	;i«:
@name"transition;
@	;i«:@keywords{ ;"length:@operator:gt;
@	;i«0[o:Sass::Tree::VariableNode;
@	;i«;"
delay:@children[ :@guarded0:
@expro;;0;[o;	;"transition;
@	;i«;"transitiono;;i	;	@;
@	;i«;[ ;"4;
@	;i«;{ ;"ntho;;
@	;i«;"has-delays;[ ;0;o:Sass::Script::Bool;T;
@	;i«o;
;;;[";/* If a delay is provided without a timing function */;@;	i­;
[ u;$g[o:Sass::Script::Operation
:@operand2o:!Sass::Script::UnaryOperation	:@operator:not:@operando:Sass::Script::Variable	:@underscored_name"
delay:@options{ :
@linei®:
@name"
delay;@
;i®:@operand1o:Sass::Script::Funcall:@splat0:
@args[o;	;"timing_function;@
;i®;"timing-function;@
;i®:@keywords{ ;"is-time;:and;@
;i®0[o:Sass::Tree::VariableNode;@
;i®;"
delay:@children[ :@guarded0:
@expro;	;"timing_function;@
;i®;"timing-functiono;;@
;i®;"timing-function;[ ;0;o:Sass::Script::Bool:@valueF;@
;i®o;;@
;i®;"has-delays;[ ;0;o;;T;@
;i®o;
;;;["9/* Keep a list of delays in case one is specified */;@;	i°;
[ o;;@;	i±;"delays;
[ ;0;o;%; 0;![o;"	;#"delays;@;	i±;"delayso;%; 0;![o;"	;#"
delay;@;	i±;"
delayo;"	;#"
delay;@;	i±;"
delayo;;i ;[ ;@;	i±;["s;"0s;@;	i±;&{ ;"if;@;	i±;&{ ;"appendo;;@;	i³;"webkit-value;
[ ;0;o;%; 0;![o;"	;#"webkit_value;@;	i³;"webkit-valueo;%; 0;![o;	;;0;[o;%; 0;![o;	;;;"-webkit;@;	i³o;"	;#"property;@;	i³;"property;@;	i³;&{ ;"prefixed-for-transitiono;"	;#"duration;@;	i³;"durationo;"	;#"timing_function;@;	i³;"timing-function;@;	i³;@;	i³;&{ ;"compact;@;	i³;&{ ;"appendo;;@;	i´;"moz-value;
[ ;0;o;%; 0;![o;"	;#"moz_value;@;	i´;"moz-valueo;%; 0;![o;	;;0;[	o;%; 0;![o;	;;;"	-moz;@;	i´o;"	;#"property;@;	i´;"property;@;	i´;&{ ;"prefixed-for-transitiono;"	;#"duration;@;	i´;"durationo;"	;#"timing_function;@;	i´;"timing-functiono;"	;#"
delay;@;	i´;"
delay;@;	i´;@;	i´;&{ ;"compact;@;	i´;&{ ;"appendo;;@;	iµ;"o-value;
[ ;0;o;%; 0;![o;"	;#"o_value;@;	iµ;"o-valueo;%; 0;![o;	;;0;[	o;%; 0;![o;	;;;"-o;@;	iµo;"	;#"property;@;	iµ;"property;@;	iµ;&{ ;"prefixed-for-transitiono;"	;#"duration;@;	iµ;"durationo;"	;#"timing_function;@;	iµ;"timing-functiono;"	;#"
delay;@;	iµ;"
delay;@;	iµ;@;	iµ;&{ ;"compact;@;	iµ;&{ ;"append:	@var"transition:
@listo;"	;#"transitions;@;	i¢;"transitionsu;$Ý[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:@options{ :
@linei¸:
@name"$experimental-support-for-webkit0[o:Sass::Tree::PropNode:@valueo; 	;"webkit_value;@;i¸;	"webkit-value:@prop_syntax:new;@;i¸:
@tabsi ;	["-webkit-transition:@children[ o:Sass::Tree::CommentNode
:
@type:silent;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;@;i¹;[ u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:@underscored_name"has_delays:@options{ :
@lineiº:
@name"has-delays0[o:Sass::Tree::PropNode:@valueo; 	;"delays;@;iº;	"delays:@prop_syntax:new;@;iº:
@tabsi ;	["-webkit-transition-delay:@children[ u;$#[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:@options{ :
@linei»:
@name"%experimental-support-for-mozilla0[o:Sass::Tree::PropNode:@valueo; 	;"moz_value;@;i»;	"moz-value:@prop_syntax:new;@;i»:
@tabsi ;	["-moz-transition:@children[ u;$[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:@options{ :
@linei¼:
@name"#experimental-support-for-opera0[o:Sass::Tree::PropNode:@valueo; 	;"o_value;@;i¼;	"o-value:@prop_syntax:new;@;i¼:
@tabsi ;	["-o-transition:@children[ o;';o;"	;#"transitions;@;	i½;"transitions;(;);@;	i½;*i ;["transition;
[ o;
;;;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;@;	iÀ;
[ o:Sass::Tree::FunctionNode; 0;T;![[o;";#"	list;@;"	listo;	;;0;[ ;@;	iÁ;@;	iÁ;"comma-list;
[o:Sass::Tree::ReturnNode	;@;	iÂ;
[ ;o;%; 0;![o;	;;0;[ ;@;	iÂo;"	;#"	list;@;	iÂ;"	listo;	;;;"
comma;@;	iÂ;@;	iÂ;&{ ;"	joino;
;;;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;@;	iÅ;
[ o;4; 0;T;![[o;";#"prefix;@;"prefix0[o;";#"property;@;"property0;@;	iÆ;"prefixed-for-transition;
[u;$®[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"	list:@options{ :
@lineiÇ:@operand1o:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"property;@	;iÇ:
@name"property;@	;iÇ:@keywords{ ;"type-of:@operator:eq;@	;iÇu:Sass::Tree::IfNodeY[00[u:Sass::Tree::IfNode9[o:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"#transitionable_prefixed_values:@options{ :
@lineiÎ:
@name"#transitionable-prefixed-valueso;	;	"property;
@
;iÎ;"property;
@
;iÎ:@keywords{ ;"
indexu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:@options{ :
@lineiÑ:@children[ :
@expro:Sass::Script::Variable	:@underscored_name"property;@;iÑ:
@name"property[o:Sass::Tree::ReturnNode	;
@
;iÏ:@children[ :
@expro: Sass::Script::Interpolation:@originally_textF:	@mido;	;	"prefix;
@
;iÏ;"prefix:@whitespace_after0:@before0;
@
;iÏ:@whitespace_beforei:@aftero;;F;o;	;	"property;
@
;iÏ;"property;0;o;;:originally_text;o:Sass::Script::String	:
@type:identifier:@value"-;
@
;iÏ;F;0;
@
;iÏ;0;0;
@
;iÏ;0;0[o:Sass::Tree::VariableNode;@	;iÈ;"new-list:@children[ :@guarded0:
@expro;;0;[ ;@	;iÈ;{ ;"comma-listo:Sass::Tree::EachNode:@has_childrenT;@	;iÉ;[o;;@	;iÊ;"new-list;[ ;0;o;;0;[o;	;"new_list;@	;iÊ;"new-listo;;0;[o;	;"prefix;@	;iÊ;"prefixo;	;"v;@	;iÊ;"v;@	;iÊ;{ ;"prefixed-for-transition;@	;iÊ;{ ;"append:	@var"v:
@listo;	;"property;@	;iÉ;"propertyo:Sass::Tree::ReturnNode	;@	;iÌ;[ ;o;	;"new_list;@	;iÌ;"new-listo;
;;;["7/* Checks if the value given is a unit of time. */;@;	iÖ;
[ o;4; 0;T;![[o;";#"
value;@;"
value0;@;	i×;"is-time;
[u;$[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"number:@options{ :
@lineiØ:@operand1o:Sass::Script::Funcall:@splat0:
@args[o:Sass::Script::Variable	:@underscored_name"
value;@	;iØ:
@name"
value;@	;iØ:@keywords{ ;"type-of:@operator:eq;@	;iØu:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:@options{ :
@lineiÛ:@children[ :
@expro:Sass::Script::Bool:@valueF;@;iÛ[o:Sass::Tree::ReturnNode	;@	;iÙ:@children[ :
@expro:!Sass::Script::UnaryOperation	;:not:@operando;	;;;o;;0;[o:Sass::Script::List	:@separator:
space;
[o;	;;	;
"s;@	;iÙo;	;;	;
"ms;@	;iÙ;@	;iÙo;;0;[o;	;"
value;@	;iÙ;"
value;@	;iÙ;{ ;"	unit;@	;iÙ;{ ;"
index;@	;iÙ;@	;iÙ